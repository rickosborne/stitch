#!/bin/bash

VERSION_NUMBER=""

bail () {
    echo "$@"
    exit 2
}

usage () {
    echo "Usage:"
    echo "  publish [-c|'version'] [-a|-b] ['commit message']"
    echo "    -a [deprecated] Use the shell to set the version"
    echo "    -b Use grunt to bump the version"
    echo "    -c Use the version as it is in the JSON files"
    json_version "package.json"
    echo "       package.js version:  ${VERSION_NUMBER}"
    json_version "bower.json"
    echo "       bower.js version:    ${VERSION_NUMBER}"
    exit 1
}

json_version () {
    VERSION_NUMBER=$(egrep -o -e '"version": "[^"]+"' "$1" | egrep -o -e "\\d+\\.\\d+\\.\\d+")
}

get_version () {
    local ver=$(echo "$1" | egrep -o -e "\\d+\\.\\d+\\.\\d+")
    [[ -z "${ver}" ]] && usage
    VERSION_NUMBER="${ver}"
}

ensure_version () {
    local ver="$1"
    local package_has_version=$(egrep -o -e '"version": "'"$ver"'-?[0-9]*"' package.json)
    [[ -z "${package_has_version}" ]] && bail "Version mismatch in package.json: $(grep '"version"' package.json)"
    local bower_has_version=$(egrep -o -e '"version": "'"$ver"'-?[0-9]*"' bower.json)
    [[ -z "${bower_has_version}" ]] && bail "Version mismatch in bower.json: $(grep '"version"' bower.json)"
}

tiptoe () {
    [[ "$?" != "0" ]] && exit
}

if [[ -z "$1" || "$1" == "help" || "$1" == "--help" ]] ; then
    usage
fi

if [[ "$1" == "-b" ]] ; then
    grunt bump::patch
    COMMIT_MESSAGE="$3"
    json_version "package.json"
else
    if [[ "$1" == "-c" ]] ; then
        json_version "package.json"
    else
        get_version "$1"
    fi
fi

COMMIT_MESSAGE="$2"
echo "Version: ${VERSION_NUMBER}"

if [[ "${COMMIT_MESSAGE}" == "-a" ]] ; then
    COMMIT_MESSAGE="$3"
    perl -p -i.verbak -e 's/"version": "[^"]+"/"version": "'"${VERSION_NUMBER}"'"/' package.json
    perl -p -i.verbak -e 's/"version": "[^"]+"/"version": "'"${VERSION_NUMBER}"'"/' bower.json
    rm *.verbak
    git commit -a --amend
fi

ensure_version "${VERSION_NUMBER}"

git checkout dev ; tiptoe
if [[ -z "${COMMIT_MESSAGE}" ]] ; then
    git tag -a "v${VERSION_NUMBER}"  ; tiptoe
else
    git tag -a "v${VERSION_NUMBER}" -m "${COMMIT_MESSAGE}" ; tiptoe
fi
git checkout gh-pages ; tiptoe
git merge dev ; tiptoe
git push --all ; tiptoe
git push --tags ; tiptoe
git checkout dev
